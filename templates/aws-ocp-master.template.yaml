AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Red Hat OCP Master deployment'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Lab information
        Parameters:
          - OpenShiftVersion
          - ClusterName
          - HostedZoneName
          - NumStudents
          - PullSecret
          - SSHKey
          - RhcosAmi
      - Label:
          default: Security configuration
        Parameters:
          - RemoteAccessCIDR
      - Label:
          default: Network configuration
        Parameters:
          - AvailabilityZone
          - VPCCIDR
          - PublicSubnetCIDR
      - Label:
          default: Cloud9 information
        Parameters:
          - Cloud9AutoStopInMin
          - Cloud9InstanceType
      - Label:
          default: CloudFormation Template Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - StudentTemplate
          - LambdaZipsBucketName
          - IgnitionBucketName
    ParameterLabels:
      AvailabilityZone:
        default: Availability Zone
      PublicSubnetCIDR:
        default: Public subnet CIDR
      RemoteAccessCIDR:
        default: Remote access CIDR
      VPCCIDR:
        default: VPC CIDR
      OpenShiftVersion:
        default: OpenShift version
      ClusterName:
        default: Cluster Name prefix
      HostedZoneName:
        default: Hosted DNS zone name
      NumStudents:
        default: Number of students
      PullSecret:
        default: OCP Pull Secret
      SSHKey:
        default: Public ssh Key
      RhcosAmi:
        default: "Red Hat Enterprise Linux CoreOS AMI ID"
      Cloud9AutoStopInMin:
        default: Cloud9 automatic stop time in minutes
      Cloud9InstanceType:
        default: Cloud9 instance type
      LambdaZipsBucketName:
        default: Lambda zips bucket name
      IgnitionBucketName:
        default: Ignition source bucket name
      StudentTemplate:
        default: Student CloudFormation template name
      QSS3BucketName:
        default: CloudFormation templates S3 bucket name
      QSS3KeyPrefix:
        default: CloudFormation templates S3 key prefix
Parameters:
  VPCCIDR:
    Description: The CIDR block for the VPC.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/18
    Type: String
  AvailabilityZone:
    Description: The Availability Zone to use for the public subnet in the VPC.
    Default: us-east-2a #us-west-2a
    Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnetCIDR:
    Description: The CIDR block for the public (DMZ) subnet 1 located in Availability
      Zone 1.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/20
    Type: String
  RemoteAccessCIDR:
    Description: The remote CIDR range for allowing SSH into the Cloud9 instance.
      We recommend that you set this value to a trusted IP range.
      For example, you might want to grant specific ranges inside your corporate network SSH access.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Type: String
  OpenShiftVersion:
    Description: The version of OpenShift to deploy for the lab.
    AllowedValues:
      - "3.11"
      - "4.2"
    Default: "4.2"
    Type: String
  ClusterName:
    Description: A short, representative cluster name to use for host names and other identifying names. This
      will be combined with the studentNumber to create the full cluster name
    AllowedPattern: ^([a-z][a-z0-9\-]{0,26})$
    ConstraintDescription: Cluster name must be alphanumeric, start with a letter, and have a maximum of 12 
      characters and all lowercase.
    MaxLength: 12
    MinLength: 1
    Type: String
  HostedZoneName:
    Description: The Route53 zone to register the targets with, such as example.com. Omit the trailing period.
    Default: "example.com"
    Type: String
  NumStudents:
    Description: The number of student environments to provision for the lab.
    Default: 1
    Type: Number
  PullSecret:
    Description: The Secret used to pull the OpenShift containers from the secure registry.
    Default: ""
    Type: String
  SSHKey:
    Description: The public key to be added to the CoreOS boxes for ssh access.
    Default: ""
    Type: String
  RhcosAmi:
    Description: Current Red Hat Enterprise Linux CoreOS AMI to use for bootstrap.
    Type: AWS::EC2::Image::Id
  Cloud9AutoStopInMin:
    Description: The time the Cloud9 instance is automatically stopped after no use.
    Default: 30
    Type: Number
  Cloud9InstanceType:
    Description: Instance size of the Cloud9 instance for the student
    AllowedPattern: ^[a-z][1-9][.][a-z0-9]+$
    MinLength: '5'
    MaxLength: '20'
    Default: "t2.micro"
    Type: String
  LambdaZipsBucketName:
    Description: '[OPTIONAL] The name of the S3 bucket where the Lambda zip files should be placed. If you leave this parameter blank, an S3 bucket will be created.'
    Default: ''
    Type: String
  IgnitionBucketName:
    Description: '[OPTIONAL] The name of the S3 bucket where the ignition script files should be placed. If you leave this parameter blank, an S3 bucket will be created.'
    Default: ''
    Type: String
  StudentTemplate:
    Description: Template name for the nested student stacks to create. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    AllowedPattern: ^[0-9a-zA-Z.]+([0-9a-zA-Z-.]*[0-9a-zA-Z.])*$
    ConstraintDescription: The bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-ocp-student-env.template.yaml
    Type: String
  QSS3BucketName:
    Description: S3 bucket name for the CloudFormation templates. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: The bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Type: String
  QSS3KeyPrefix:
    Description: S3 folder name for the CloudFormation templates. This string can include
      numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: S3 folder name can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: aws-ocp/
    Type: String
Conditions:
    CreateLambdaZipsBucket: !Equals [!Ref 'LambdaZipsBucketName', '']
    CreateIgnitionBucket: !Equals [!Ref 'IgnitionBucketName', '']
#   OCP4: !Equals [!Ref OpenShiftVersion, '4.2']
# Mappings
#   OpenShiftVersion:
#     4.2:
#       OPENSHIFT_MIRROR_URL:  "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/"
#       OPENSHIFT_VERSION: "4.2.12"
#       OPENSHIFT_INSTALL_BINARY: "openshift-install"

Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/aws-ocp-vpc.template.yaml'
      Parameters:
        AvailabilityZone:
            Ref: AvailabilityZone
        PublicSubnetCIDR:
            Ref: PublicSubnetCIDR
        VPCCIDR:
          Ref: VPCCIDR

  IamStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/aws-ocp-iam.template.yaml'
      Parameters:
        LambdaZipsBucketName: !If [ CreateLambdaZipsBucket, !Ref LambdaZipsBucket, !Ref LambdaZipsBucketName ]
        IgnitionBucketName: !If [CreateIgnitionBucket, !Ref IgnitionBucket, !Ref IgnitionBucketName ]
        ClusterName: !Ref ClusterName
        DeleteLambdaZipsBucketContents: !If [ CreateLambdaZipsBucket, "True", "False" ]
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix

  IgnitionBucket:
    #Condition: OCP4
    Type: AWS::S3::Bucket
    Condition: CreateIgnitionBucket

  LambdaZipsBucket:
    Type: AWS::S3::Bucket
    Condition: CreateLambdaZipsBucket

  LambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/aws-ocp-lambda.template.yaml'
      Parameters:
        LambdaZipsBucketName: !If [ CreateLambdaZipsBucket, !Ref LambdaZipsBucket, !Ref LambdaZipsBucketName ]
        CopyZipsRoleArn: !GetAtt IamStack.Outputs.CopyZipsRoleArn
        ExecuteCFRoleArn: !GetAtt IamStack.Outputs.ExecuteCFRoleArn
        ValidateDeploymentRoleArn: !GetAtt IamStack.Outputs.ValidateDeploymentRoleArn
        GenerateIgnitionConfigRoleArn: !GetAtt IamStack.Outputs.GenerateIgnitionConfigRoleArn
        AuthBucket: !If [CreateIgnitionBucket, !Ref IgnitionBucket, !Ref IgnitionBucketName ]
        ClusterName: !Ref ClusterName
        NumStudents: !Ref NumStudents
        HostedZoneName: !Ref HostedZoneName
        OpenShiftMirrorURL: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/"
        OpenShiftVersion : "4.2.12"
        OpenShiftClientBinary: "openshift-client"
        StudentTemplate: !Ref StudentTemplate
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix

  IgnitionExecute:
    #Condition: OCP4
    Type: Custom::LambdaDeployIgnition
    Properties:
      ServiceToken: !GetAtt LambdaStack.Outputs.DeployIgnitionLambdaArn
      IgnitionBucket: !If [CreateIgnitionBucket, !Ref IgnitionBucket, !Ref IgnitionBucketName ]
      PullSecret: !Ref PullSecret
      SSHKey: !Ref SSHKey
      ClusterName: !Ref ClusterName
      NumStudents: !Ref NumStudents
      OpenShiftMirrorURL: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/"
      OpenShiftVersion : "4.2.12"
      OpenShiftInstallBinary: "openshift-install"

  StudentStacks:
    DependsOn: IgnitionExecute
    Type: Custom::LambdaDeployCF
    Properties:
      ServiceToken: !GetAtt LambdaStack.Outputs.DeployCFLambdaArn
      StackName: !Ref ClusterName
      KeyToUpdate: "StudentNum"
      StudentNum: !Ref NumStudents
      TemplateURL: !Sub "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/${StudentTemplate}"
      VpcId: !GetAtt 'VPCStack.Outputs.VPCID'
      SubnetId: !GetAtt 'VPCStack.Outputs.PublicSubnetID'
      VPCCIDR: !Ref VPCCIDR
      RemoteAccessCIDR: !Ref RemoteAccessCIDR
      MasterStack: !Sub ${AWS::StackName}
      OpenShiftVersion: !Ref OpenShiftVersion
      NumStacks: !Ref NumStudents
      ClusterName: !Ref ClusterName
      HostedZoneName: !Ref HostedZoneName
      RhcosAmi: !Ref RhcosAmi
      IgnitionLocation: !If [CreateIgnitionBucket, !Sub "s3://${IgnitionBucket}", !Sub "s3://${IgnitionBucketName}" ]
      Cloud9AutoStopInMin: !Ref Cloud9AutoStopInMin
      Cloud9InstanceType: !Ref Cloud9InstanceType
      QSS3BucketName: !Ref QSS3BucketName
      QSS3KeyPrefix: !Ref QSS3KeyPrefix

  ValidateEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub ${ClusterName}-ValidateEvent
      ScheduleExpression:  "rate(1 hour)"
      Targets:
        - Arn: !GetAtt LambdaStack.Outputs.ValidateDeploymentLambdaArn
          Id: !Sub ${ClusterName}-ValidateDeploymentLambda

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaStack.Outputs.ValidateDeploymentLambdaArn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - "ValidateEvent"
          - "Arn"
#  DeleteBucketContents:
#    Condition: CreateLambdaZipsBucket
#    Type: Custom::DeleteBucketContents
#    Version: '1.0'
#    Properties:
#      ServiceToken: !GetAtt 'FunctionStack.Outputs.DeleteBucketContentsLambdaArn'
#      OutputBucket: !Ref 'LambdaZipsBucket'
